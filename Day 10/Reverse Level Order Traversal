/* 
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}
*/

class Tree
{
    public ArrayList<Integer> reverseLevelOrder(Node node) 
    {
        // code here
        ArrayList<Integer> ans = new ArrayList<Integer>();
        Queue<Node> q = new ArrayDeque<>();
        q.add(node);
        
        //first write level order traversal from right to left
        while(!q.isEmpty())
        {
            Node curr = q.remove();
            ans.add(curr.data);
            if(curr.right!=null)
                q.add(curr.right);
            if(curr.left!=null)
                q.add(curr.left);
        }
        //now reverse the ArrayList ans;
        Collections.reverse(ans);
        ArrayList<Integer> ans1 = new ArrayList<Integer>();
        for(int i=0;i<ans.size();i++)
            ans1.add(ans.get(i));
        return ans1;
    }
}      
