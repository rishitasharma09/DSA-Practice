class Solution {
    HashMap<Integer, Integer> hm;
    public TreeNode buildTree(int[] preorder, int[] inorder) 
    {
        hm = new HashMap<>();
        for(int i=0;i<inorder.length;i++)
        {
            hm.put(inorder[i],i);
        }
        return helper(preorder,0,preorder.length-1,inorder,0,inorder.length-1);
    }
    
    public TreeNode helper(int[] pre, int ps, int pe, int[] in, int is, int ie)
    {
        //base case
        if(ps>pe || is>ie)
            return null;
        
        TreeNode root = new TreeNode(pre[ps]);
        int idx = hm.get(pre[ps]);
        //number of nodes in left side of root
        int count = idx-is;
        
        root.left = helper(pre,ps+1,ps+count,in,is,idx-1);
        root.right = helper(pre,ps+count+1,pe,in,idx+1,ie);
        
        return root;
    }
}
