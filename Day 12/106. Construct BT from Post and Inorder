class Solution {
    HashMap<Integer, Integer> hm;
    public TreeNode buildTree(int[] inorder, int[] postorder) 
    {
        hm = new HashMap<>();
        for(int i=0;i<inorder.length;i++)
        {
            hm.put(inorder[i],i);
        }
        return helper(postorder,0,postorder.length-1,inorder,0,inorder.length-1);
    }
    
    public TreeNode helper(int[]post, int ps, int pe, int[] in, int is, int ie)
    {
        if(ps>pe || is>ie)
            return null;
        
        TreeNode root = new TreeNode(post[pe]);
        int idx = hm.get(post[pe]);
        //count the number of elements in the left subtree of root
        int count = idx-is;
        
        root.left = helper(post,ps,ps+count-1,in,is,idx-1);
        root.right = helper(post,ps+count,pe-1,in,idx+1,ie);
        
        return root;
    }
}
