class Solution {
    public int firstMissingPositive(int[] arr) 
    {
        int n= arr.length;
        
//         CODE 1
        
//         int i=0;
        
//         //setting elements on their positions
//         while(i<n)
//         {
//             if(arr[i]!=i+1 && arr[i]>=1 && arr[i]<=n && arr[arr[i]-1]!=arr[i])
//             //this condition arr[arr[i]-1]!=arr[i] is to handle duplicates
//             {
//                 int idx = arr[i]-1;
//                 int temp = arr[idx];
//                 arr[idx] = arr[i];
//                 arr[i] = temp;
//             }
//             else
//                 i++;
//         }
        
//         for(int j=0;j<n;j++)
//         {
//             if(arr[j]!=j+1)
//                 return j+1;
//         }
        
//         return n+1;
        
        
        
        
        
        
//         CODE 2
        
        int i=0;
        while(i<n)
        {
            if(arr[i]==i+1)
            {
                i++;
                continue;
            }
              
            
            if(arr[i]<1 || arr[i]>n)
            {
                i++;
                continue;
            }
            
            int i1 = i;
            int i2 = arr[i]-1;
            
            //to handle duplicacy
            if(arr[i1] == arr[i2])
            {
                i++;
                continue;
            }
            
            //swap
            int temp = arr[i2];
            arr[i2] = arr[i1];
            arr[i1] = temp;
            
        }
        
        for(int j=0;j<n;j++)
        {
            if(arr[j]!=j+1)
                return j+1;
        }
        
        return n+1;
        
    }
}
