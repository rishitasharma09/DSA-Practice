class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) 
    {
        int n = nums.length;
        int p[] = new int[n];
        int s[] = new int[n];
        
        //prefix sum array
        p[0]=nums[0];
        for(int i=1;i<n;i++)
        {
            if(i%k==0)
                p[i]=nums[i];
            else
                p[i]=Math.max(nums[i],p[i-1]);
        }
        
        //suffix sum array
        s[n-1]=nums[n-1];
        for(int i=n-2; i>=0; i--)
        {
            if((i+1)%k==0)
                s[i]=nums[i];
            else
                s[i]=Math.max(nums[i],s[i+1]);
        }
        
        //now filling the answer array
        int ans[] = new int[n-k+1];
        for(int i=0;i<=n-k;i++)
        {
            if(i%k==0)
                ans[i]=s[i];
            else
                ans[i]=Math.max(s[i],p[i+k-1]);
        }
        return ans;
    }
}
