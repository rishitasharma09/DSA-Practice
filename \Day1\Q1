class Solution
{
    //Function to convert an infix expression to a postfix expression.
	public static String infixToPostfix(String exp) 
	{
		// Your code here
		Stack<Character> op = new Stack<>();
		Stack<String> st = new Stack<>();
		String res = "";
		
		for(int i=0;i<exp.length();i++)
		{
		    char ch = exp.charAt(i);
		    if(ch == '(')
		    {
		        op.push(ch);
		    }
		    
		    else if(ch == ')')
		    {
		        while(op.peek()!='(')
		        {
		            String c2 = st.pop();
		            String c1 = st.pop();
		            char o = op.pop();
		            
		            res = c1 + c2 + o;
		            st.push(res);
		            
		        }
		        op.pop();
		    }
		    
		    else if(ch=='+' || ch=='-' || ch=='*' || ch=='/'|| ch=='^')
		    {
		        while(!op.isEmpty() && op.peek()!='(' && prec(ch)<=prec(op.peek()))
		        {
		            String c2 = st.pop();
		            String c1 = st.pop();
		            char o = op.pop();
		            
		            res = c1 + c2 + o;
		            st.push(res);
		        }
		        op.push(ch);
		    }
		    else
		    {
		        st.push(ch + "");  //char to String
		    }
		}
		while(!op.isEmpty())
        {
            String c2 = st.pop();
            String c1 = st.pop();
            char o = op.pop();
            
            res = c1 + c2 + o;
		    st.push(res);
            
        }
        return st.pop();
		
	} 
	static int prec(char ch)
     {
        switch(ch)
        {
            case '+' :
                return 1;
            case '-' :
                return 1;
            case '*' :
                return 2;
            case '/':
                return 2;
            case '^' :
                return 3;
        }
        return 0;
     }
}
